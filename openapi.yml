openapi: 3.0.1
info:
  title: Getir Challenge service
  description: Service that provide RESTful API to fetch the records based on date and coun
  contact:
    email: mazizol@yahoo.com
  version: 1.0.0
servers:
  - url: "http://54.255.145.143:3000"
    description: Test environment
paths:
  /api/v1/records:
    post:
      summary: API to fetch the records based on date and count
      operationId: recordsV1
      requestBody:
        description: Data to filter the records
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RecordRequest"
            examples:
              Data:
                summary: Data for filter the records
                value:
                  startDate: "2016-01-26"
                  endDate: "2018-02-02"
                  minCount: 2700
                  maxCount: 3000
      responses:
        "200":
          description: Record found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecordResponse"
              examples:
                Success:
                  value:
                     code: 0
                     msg: "Success"
                     records: [ 
                      {
                        "key": "ibfRLaFT",
                        "createdAt": "2016-12-25T16:43:27.909Z",
                        "totalCount": 2892
                      }
                     ]
                Bad Request:
                  value:
                    code: 400
                    msg: "must have required property 'startDate"
                    records: []
                Internal Error:
                  value:
                    code: 500
                    msg: "Internal Server Error"
                    records: []
components:
  schemas:
    RecordRequest:
      type: object
      required:
        - receipt
      properties:
        startDate:
          type: string
          format: YYYY-MM-DD
        endDate:
          type: string
          format: YYYY-MM-DD
        minCount:
          type: number
        masCOunt:
          type: number
    RecordResponse:
      type: object
      properties:
        code:
          type: number
          example: 0
        msg:
          type: string
          example: "Success"
        records:
          type: array
          items:
           type: object
           properties:
             key: 
              type: string
              example: ibfRLaFT
             createdAt: 
              type: string
              example: 2016-12-25T16:43:27.909Z
             totalCount: 
              type: number
              example: 2892